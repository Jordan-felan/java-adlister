import com.mysql.jdbc.Driver;

import java.sql.*;

public class JdbcLecture {
    public static void main(String[] args) throws SQLException {
        Config config = new Config();
        //instantiate mysql driver to register to the built in java driver manager
        DriverManager.registerDriver(new Driver());

        Connection connection = DriverManager.getConnection(config.getUrl(), config.getUser(), config.getPassword());

        Statement stmt = connection.createStatement();

        //returns a boolean indicating success or not. true for deleted, false if it failed
//        stmt.execute("DELETE FROM albums WHERE id = 4");

        //this returns the number of rows affected
//        stmt.executeUpdate("INSERT INTO albums (artist, name, release_date, genre, sales) VALUES('Nelly Furtado', 'Loose', 2006, 'Dance-pop, hip hop, R&B', 12.5)");

        //returns a ResultSet object
//        stmt.executeQuery("SELECT * FROM albums");

        //handling the results with the ResultSet object
        ResultSet rs =stmt.executeQuery("SELECT * FROM albums");
// 'rs' is an instance of ResultSet

        //method will return true as long as there are rows left in our results
        while (rs.next()) {
            // do something with each row
            System.out.println("Here's an album");
            System.out.println("  id:" + rs.getLong("id"));
            System.out.println("  artist: " + rs.getString("artist"));
            System.out.println("  name: " + rs.getString("name"));
        }

        String insertQuery = "INSERT INTO albums (artist, name, release_date, genre, sales) VALUES('Nelly Furtado', 'Loose', 2006, 'Dance-pop, hip hop, R&B', 12.5)";

        //for executeUpdate method we can have two attributes
        //first is query string we want to execute
        //second is a constant from the statement object
        //this gives us access to the ID's that are automatically generated by the database
        stmt.executeUpdate(insertQuery, Statement.RETURN_GENERATED_KEYS);

        // we can then use the getGeneratedKeys method on the ResultSet object which will hold any ID's generated by the database
        ResultSet rsKeys = stmt.getGeneratedKeys();

        if(rsKeys.next()) {
            System.out.println("Inserted a new record: New ID: " + rsKeys.getLong(1));
        }
    }
}
